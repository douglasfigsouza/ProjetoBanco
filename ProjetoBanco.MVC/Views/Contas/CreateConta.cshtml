@model ProjetoBanco.MVC.ViewModels.CombosContaViewModel
@{
    ViewBag.Title = "CreateConta";
}

<h5>Cadastro de Conta</h5>
<div class="row">
    <div class="col s6">
        <hr>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            {
                <div class="row">
                    <div class="col s6">
                        <label class="col s12" for="ddlAgencias">Agência</label>
                        @Html.DropDownList("ddlAgencias", new SelectList(@Model.Agencias, "agencia", "agencia"), "Selecione", new { @class = "col s10" })
                    </div>
                    <div class="col s6">
                        <label class="col s12" for="num">N° Conta</label>
                        <input type="text" class="col s12" id="num" name="num" />
                    </div>
                </div>

                <div class="row">
                    <div class="col s6">
                        <label class="col s12" for="senha">Senha</label>
                        <input type="password" class="col s12" id="senha" name="senha" />
                    </div>
                    <div class="col s6">
                        <label class="col s12" for="conf_senha">Confirme sua Senha</label>
                        <input type="password" class="col s12" id="conf_senha" name="conf_senha" />
                    </div>
                </div>

                <div class="row">
                    <div class="col s12">
                        <label class="col s12">Tipo de Conta</label>
                        <p>
                            <input class="with-gap col s1" value="c" name="tipoConta" type="radio" id="corrente" checked />
                            <label for="corrente" class="col s5">C. Corrente</label>
                        </p>
                        <p>
                            <input class="with-gap col s1" name="tipoConta" value="p" type="radio" id="poupanca" />
                            <label for="poupanca" class="col s5">C. Poupança</label>
                        </p>
                    </div>
                </div>

                <!-- Modal Trigger -->
                @*<button id="abremodal" type="button">abre</button>*@
                <a class="waves-effect waves-light btn modal-trigger" href="#modalCientesConta">Modal</a>


                <!-- Modal Structure -->
                <div id="modalCientesConta" class="modal">
                    <div class="modal-content">
                        <div class="row">
                            <div class="col s12">
                                <table id="clientesConta" class="striped responsive-table centered" cellspacing="0" width="100%">
                                    <thead>
                                        <tr>
                                            <th>Nome</th>
                                            <th>CPF</th>
                                            <th>RG</th>
                                            <th>Fone</th>
                                            <th>Cidade</th>
                                            <th>Bairro</th>
                                            <th>Rua</th>
                                            <th>Incluir</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <td>Tiger</td>
                                            <td>Nixon</td>
                                            <td>System Architect</td>
                                            <td>Edinburgh</td>
                                            <td>61</td>
                                            <td>2011/04/25</td>
                                            <td>$320,800</td>
                                            <td>
                                                <i class="material-icons modal-action modal-close green">add_box</i>
                                           </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>


                <div class="row">
                    <button class="btn waves-effect waves-light right" type="submit" name="action">
                        Cadastrar
                        <i class="material-icons right">send</i>
                    </button>
                </div>
            }
        }
    </div>
</div>
<script>
    $(document).ready(function () {
        $('.modal').modal({ dismissible: false });
        $("#clientesConta").dataTable({
            language:{
            "sEmptyTable": "Nenhum registro encontrado",
            "sInfo": "Mostrando de _START_ até _END_ de _TOTAL_ registros",
            "sInfoEmpty": "Mostrando 0 até 0 de 0 registros",
            "sInfoFiltered": "(Filtrados de _MAX_ registros)",
            "sInfoPostFix": "",
            "sInfoThousands": ".",
            "sLengthMenu": "Exibir _MENU_",
            "sLoadingRecords": "Carregando...",
            "sProcessing": "Processando...",
            "sZeroRecords": "Nenhum registro encontrado",
            "sSearch": "Pesquisar",
            "oPaginate": {
                "sNext": "Próximo",
                "sPrevious": "Anterior",
                "sFirst": "Primeiro",
                "sLast": "Último"
            },
            "oAria": {
                "sSortAscending": ": Ordenar colunas de forma ascendente",
                "sSortDescending": ": Ordenar colunas de forma descendente"
            }
                }
     
        });
        ////função que busca cidades pelo id do estado e seta no combo cidades
        //$("#ddlestadoClientes").change(function () {
        //    var id = $("#ddlestadoClientes").val();
        //    $('#ddlCidadesClientes').empty();
        //    $.ajax(
        //        {
        //            type: 'GET',
        //            url: "GetCidadesByIdEstado/" + id,
        //            dataType: 'json',
        //            cache: false,
        //            async: true,
        //            success: function (data) {
        //                $.each(data, function (key, value) {
        //                    $("#ddlCidadesClientes").append("<option value=" + value.cidadeId + ">" + value.Nome + "</option>");
        //                });
        //                $('#ddlCidadesClientes').material_select();
        //            }, error(e) {
        //                alert("Erro ao Consultar Cidades!");
        //            }

        //        });
        //    $("#ddlCidadesClientes").removeAttr('disabled');
        //});
        $("form").validate({
            submitHandler: function (form) {
                form.submit();
            },
            rules: {
                nome: {
                    required: true,
                    minlength: 5,
                    maxlength: 100
                },
                cpf: {
                    required: true
                },
                rg: {
                    required: true
                },
                fone: {
                    required: true
                },
                bairro: {
                    required: true
                },
                rua: {
                    required: true
                },
                num: {
                    required: true
                },
                nivel: {
                    required: true
                },
                cidadeId: {
                    required: true
                }
            },
            messages: {
                nome: {
                    required: "O campo Nome é Obrigatório! Digite-O",
                    minlength: "O campo Nome deve conter no mínimo 5 caracteres!",
                    maxlength: "O campo Nome deve conter no máximo 100 caracteres!"
                },
                cpf: {
                    required: "O campo CPF é Obrigatório! Digite-O"
                },
                rg: {
                    required: "O campo RG é Obrigatório! Digite-O"
                },
                fone: {
                    required: "O campo Fone é Obrigatório! Digite-O"
                },
                bairro: {
                    required: "O campo Bairro é Obrigatório! Digite-O"
                },
                rua: {
                    required: "O campo Rua é Obrigatório! Digite-O"
                },
                num: {
                    required: "O campo N° é Obrigatório! Digite-O"

                },
                nivel: {
                    required: "O campo Nível é Obrigatório! Digite-O"

                },
                cidadeId: {
                    required: "Selecione a cidade!"
                }

            }
        });
    });
</script>
