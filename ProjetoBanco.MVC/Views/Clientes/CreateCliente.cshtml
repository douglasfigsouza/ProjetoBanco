@model ProjetoBanco.MVC.ViewModels.ClienteViewModel

@{
    ViewBag.Title = "CreateCliente";
}

<h5>Cadastro de Clientes</h5>
<div class="row">
    <div class="col s7">
        <hr>
    </div>
    <div class="col s8">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="row">
                <label for="nome" class="col s12">Nome</label>
                <div class="col s10">
                    @Html.EditorFor(model => model.nome, new { htmlAttributes = new { @class = "col s12" } })
                    @Html.ValidationMessageFor(model => model.nome, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <label for="cpf" class="col s12">CPF</label>
                <div class="col s10">
                    @Html.EditorFor(model => model.cpf, new { htmlAttributes = new { @class = "col s12" } })
                    @Html.ValidationMessageFor(model => model.cpf, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <label for="rg" class="col s12">RG</label>
                <div class="col s10">
                    @Html.EditorFor(model => model.rg, new { htmlAttributes = new { @class = "col s12" } })
                    @Html.ValidationMessageFor(model => model.rg, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <label for="fone" class="col s12">Fone</label>
                <div class="col s10">
                    @Html.EditorFor(model => model.fone, new { htmlAttributes = new { @class = "col s12" } })
                    @Html.ValidationMessageFor(model => model.fone, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <label class="col s12">Nivel de Usuário</label>
                <div class="col s10">
                    <p>
                        <input class="with-gap col s1" value="c" name="nivel" type="radio" id="cliente" />
                        <label for="cliente" class="col s4">Cliente</label>
                    </p>
                    <p>
                        <input class="with-gap col s1" name="nivel" value="f" type="radio" id="funcionario" />
                        <label for="funcionario" class="col s4">Funcionario</label>
                    </p>
                </div>
            </div>
            <div class="row">
                <div class="col s5">
                    <label class="col s12" for="ddlestadoClientes">Estado</label>
                    @Html.DropDownList("ddlestadoClientes", new SelectList(ViewBag.estados, "EstadoId", "Sigla"), "Selecione", new { @class = "col s10" })
                </div>
                <div class="col s7">
                    <label class="col s12" for="ddlCidadesClientes">Cidade</label>
                    <select id="ddlCidadesClientes" name="cidadeId" class="col s8" disabled>
                        <option value="0">Selecione</option>
                    </select>
                </div>
            </div>
            <div class="row">
                <label for="bairro" class="col s12">Bairro</label>
                <div class="col s10">
                    @Html.EditorFor(model => model.bairro, new { htmlAttributes = new { @class = "col s12" } })
                    @Html.ValidationMessageFor(model => model.bairro, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="col s8">
                    <label for="rua" class="col s12">Rua</label>
                    @Html.EditorFor(model => model.rua, new { htmlAttributes = new { @class = "col s12" } })
                    @Html.ValidationMessageFor(model => model.rua, "", new { @class = "text-danger" })
                </div>
                <div class="col s4">
                    <label for="num" class="col s12">N°</label>
                    @Html.EditorFor(model => model.num, new { htmlAttributes = new { @class = "col s6" } })
                    @Html.ValidationMessageFor(model => model.num, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <button class="btn waves-effect waves-light" type="submit" name="action">
                    Cadastrar
                    <i class="material-icons right">send</i>
                </button>
            </div>
        }
    </div>
</div>
<script>
    $(document).ready(function () {
        //função que busca cidades pelo id do estado e seta no combo cidades
        $("#ddlestadoClientes").change(function () {
            var id = $("#ddlestadoClientes").val();
            $.ajax(
                {
                    type: 'GET',
                    url: "GetCidadesByIdEstado/" + id,
                    dataType: 'json',
                    cache: false,
                    async: true,
                    success: function (data) {
                        $.each(data, function (key, value) {
                            $("#ddlCidadesClientes").append("<option value=" + value.cidadeId + ">" + value.Nome + "</option>");
                        });
                        $('#ddlCidadesClientes').material_select();
                    }, error(e) {
                        alert("Erro ao Consultar Cidades!");
                    }

                });
            $("#ddlCidadesClientes").removeAttr('disabled');
        });
    });
</script>
